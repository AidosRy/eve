/*
 * This file was generated by the Gradle 'init' task.
 */

//buildscript {
//    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.4.5")
//    }
//}

plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.4.4'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.4.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.4.4'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.springframework.boot:spring-boot-starter-mail:2.4.4'
    implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.8'
//    implementation "org.mapstruct:mapstruct:1.4.2.Final"
//    implementation 'org.apache.mahout:mahout-mr:0.10.0'
//    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
//    runtimeOnly 'org.postgresql:postgresql:42.2.19'
    runtimeOnly 'com.h2database:h2:1.4.200'
//    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.4.4'
//    testImplementation 'org.springframework.security:spring-security-test:5.4.5'
}

group = 'kz.balthazar'
version = '0.0.7'
description = 'eve'
java.sourceCompatibility = JavaVersion.VERSION_15

//publishing {
//    publications {
//        maven(MavenPublication) {
//            from(components.java)
//        }
//    }
//}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes(
                'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
                'Main-Class': 'kz.balthazar.eve.Eve'
        )
    }
}

jar {
    manifest {
        attributes "Main-Class": "kz.balthazar.eve.Eve"
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}